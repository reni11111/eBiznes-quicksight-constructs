"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// export type ClientConfiguration = ServiceConfigurationOptions & ClientApiVersions;
/**
 * Contains interfaces for use with the QuickSight client.
 */
//   export import Types = QuickSight;
// }
// export = QuickSight;
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"quicksight.js","sourceRoot":"","sources":["../../src/sdk/quicksight.ts"],"names":[],"mappings":";;AAwnLA,qFAAqF;AACrF;;GAEG;AACH,sCAAsC;AACtC,IAAI;AACJ,uBAAuB","sourcesContent":["// declare namespace QuickSight {\nexport interface AccountCustomization {\n                                                                    \n  readonly defaultTheme?: Arn;\n}\nexport interface AccountSettings {\n                                                                                                                                                                                                                                             \n  readonly accountName?: String;\n                                                                                                                       \n  readonly edition?: Edition;\n                                                                       \n  readonly defaultNamespace?: Namespace;\n                                                                              \n  readonly notificationEmail?: String;\n}\nexport type ActionList = String[];\nexport interface ActiveIAMPolicyAssignment {\n                                                      \n  readonly assignmentName?: IAMPolicyAssignmentName;\n                                                                \n  readonly policyArn?: Arn;\n}\nexport type ActiveIAMPolicyAssignmentList = ActiveIAMPolicyAssignment[];\nexport interface AdHocFilteringOption {\n                                     \n  readonly availabilityStatus?: DashboardBehavior;\n}\nexport type AdditionalDashboardIdList = RestrictiveResourceId[];\nexport type AliasName = string;\nexport interface AmazonElasticsearchParameters {\n                                                         \n  readonly domain: Domain;\n}\nexport interface Analysis {\n                                        \n  readonly analysisId?: RestrictiveResourceId;\n                                                                \n  readonly arn?: Arn;\n                                                      \n  readonly name?: AnalysisName;\n                                                     \n  readonly status?: ResourceStatus;\n                                                     \n  readonly errors?: AnalysisErrorList;\n                                                          \n  readonly dataSetArns?: DataSetArnsList;\n                                                      \n  readonly themeArn?: Arn;\n                                                        \n  readonly createdTime?: Timestamp;\n                                                             \n  readonly lastUpdatedTime?: Timestamp;\n                                                                                                   \n  readonly sheets?: SheetList;\n}\nexport interface AnalysisError {\n                                                \n  readonly type?: AnalysisErrorType;\n                                                                \n  readonly message?: NonEmptyString;\n}\nexport type AnalysisErrorList = AnalysisError[];\nexport type AnalysisErrorType = 'ACCESS_DENIED' | 'SOURCE_NOT_FOUND' | 'DATA_SET_NOT_FOUND' | 'INTERNAL_FAILURE' | 'PARAMETER_VALUE_INCOMPATIBLE' | 'PARAMETER_TYPE_INVALID' | 'PARAMETER_NOT_FOUND' | 'COLUMN_TYPE_MISMATCH' | 'COLUMN_GEOGRAPHIC_ROLE_MISMATCH' | 'COLUMN_REPLACEMENT_MISSING' | string;\nexport type AnalysisFilterAttribute = 'QUICKSIGHT_USER' | string;\nexport type AnalysisName = string;\nexport interface AnalysisSearchFilter {\n                                                                                                                  \n  readonly operator?: FilterOperator;\n                                                                                                               \n  readonly name?: AnalysisFilterAttribute;\n                                                                                                                                                                                                         \n  readonly value?: String;\n}\nexport type AnalysisSearchFilterList = AnalysisSearchFilter[];\nexport interface AnalysisSourceEntity {\n                                                                           \n  readonly sourceTemplate?: AnalysisSourceTemplate;\n}\nexport interface AnalysisSourceTemplate {\n                                                                              \n  readonly dataSetReferences: DataSetReferenceList;\n                                                                                      \n  readonly arn: Arn;\n}\nexport interface AnalysisSummary {\n                                                                 \n  readonly arn?: Arn;\n                                                                     \n  readonly analysisId?: RestrictiveResourceId;\n                                                                                            \n  readonly name?: AnalysisName;\n                                                        \n  readonly status?: ResourceStatus;\n                                                        \n  readonly createdTime?: Timestamp;\n                                                             \n  readonly lastUpdatedTime?: Timestamp;\n}\nexport type AnalysisSummaryList = AnalysisSummary[];\nexport type Arn = string;\nexport type AssignmentStatus = 'ENABLED' | 'DRAFT' | 'DISABLED' | string;\nexport interface AthenaParameters {\n                                                       \n  readonly workGroup?: WorkGroup;\n}\nexport interface AuroraParameters {\n                      \n  readonly host: Host;\n                      \n  readonly port: Port;\n                          \n  readonly database: Database;\n}\nexport interface AuroraPostgreSqlParameters {\n                      \n  readonly host: Host;\n                      \n  readonly port: Port;\n                          \n  readonly database: Database;\n}\nexport type AwsAccountId = string;\nexport type AwsAndAccountId = string;\nexport interface AwsIotAnalyticsParameters {\n                              \n  readonly dataSetName: DataSetName;\n}\nexport type Boolean = boolean;\nexport interface BorderStyle {\n                                                                     \n  readonly show?: boolean;\n}\nexport interface CalculatedColumn {\n                             \n  readonly columnName: ColumnName;\n                                                                                                                                                                                                                                         \n  readonly columnId: ColumnId;\n                                                                  \n  readonly expression: Expression;\n}\nexport type CalculatedColumnList = CalculatedColumn[];\nexport interface CancelIngestionRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                             \n  readonly dataSetId: string;\n                                         \n  readonly ingestionId: IngestionId;\n}\nexport interface CancelIngestionResponse {\n                                                                       \n  readonly arn?: Arn;\n                                         \n  readonly ingestionId?: IngestionId;\n                                                       \n  readonly requestId?: string;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface CastColumnTypeOperation {\n                             \n  readonly columnName: ColumnName;\n                                      \n  readonly newColumnType: ColumnDataType;\n                                                                                                                                                                         \n  readonly format?: TypeCastFormat;\n}\nexport type Catalog = string;\nexport type ClusterId = string;\nexport type ColorList = HexColor[];\nexport type ColumnDataType = 'STRING' | 'INTEGER' | 'DECIMAL' | 'DATETIME' | string;\nexport interface ColumnDescription {\n                                                        \n  readonly text?: ColumnDescriptiveText;\n}\nexport type ColumnDescriptiveText = string;\nexport interface ColumnGroup {\n                                                                  \n  readonly geoSpatialColumnGroup?: GeoSpatialColumnGroup;\n}\nexport interface ColumnGroupColumnSchema {\n                                                              \n  readonly name?: String;\n}\nexport type ColumnGroupColumnSchemaList = ColumnGroupColumnSchema[];\nexport type ColumnGroupList = ColumnGroup[];\nexport type ColumnGroupName = string;\nexport interface ColumnGroupSchema {\n                                                     \n  readonly name?: String;\n                                                                                     \n  readonly columnGroupColumnSchemaList?: ColumnGroupColumnSchemaList;\n}\nexport type ColumnGroupSchemaList = ColumnGroupSchema[];\nexport type ColumnId = string;\nexport interface ColumnLevelPermissionRule {\n                                                                                         \n  readonly principals?: PrincipalList;\n                                          \n  readonly columnNames?: ColumnNameList;\n}\nexport type ColumnLevelPermissionRuleList = ColumnLevelPermissionRule[];\nexport type ColumnList = ColumnName[];\nexport type ColumnName = string;\nexport type ColumnNameList = String[];\nexport interface ColumnSchema {\n                                               \n  readonly name?: String;\n                                                    \n  readonly dataType?: String;\n                                                          \n  readonly geographicRole?: String;\n}\nexport type ColumnSchemaList = ColumnSchema[];\nexport interface ColumnTag {\n                                                \n  readonly columnGeographicRole?: GeoSpatialDataRole;\n                                            \n  readonly columnDescription?: ColumnDescription;\n}\nexport type ColumnTagList = ColumnTag[];\nexport type CopySourceArn = string;\nexport interface CreateAccountCustomizationRequest {\n                                                                                      \n  readonly awsAccountId: AwsAccountId;\n                                                                                 \n  readonly namespace?: Namespace;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \n  readonly accountCustomization: AccountCustomization;\n                                                                             \n  readonly tags?: TagList;\n}\nexport interface CreateAccountCustomizationResponse {\n                                                                                                            \n  readonly arn?: Arn;\n                                                                                      \n  readonly awsAccountId?: AwsAccountId;\n                                                                                 \n  readonly namespace?: Namespace;\n                                                                                       \n  readonly accountCustomization?: AccountCustomization;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface CreateAnalysisRequest {\n                                                                              \n  readonly awsAccountId: AwsAccountId;\n                                                                                                           \n  readonly analysisId: RestrictiveResourceId;\n                                                                                                                                         \n  readonly name: AnalysisName;\n                                                                                                                                                                         \n  readonly parameters?: Parameters;\n                                                                                                                                                                                                                                                                                                                                                                  \n  readonly permissions?: ResourcePermissionList;\n                                                                                                                                                                                 \n  readonly sourceEntity: AnalysisSourceEntity;\n                                                                                                                                                                       \n  readonly themeArn?: Arn;\n                                                                                                             \n  readonly tags?: TagList;\n}\nexport interface CreateAnalysisResponse {\n                                          \n  readonly arn?: Arn;\n                                        \n  readonly analysisId?: RestrictiveResourceId;\n                                                            \n  readonly creationStatus?: ResourceStatus;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface CreateColumnsOperation {\n                                              \n  readonly columns: CalculatedColumnList;\n}\nexport interface CreateDashboardRequest {\n                                                                                  \n  readonly awsAccountId: AwsAccountId;\n                                                                        \n  readonly dashboardId: RestrictiveResourceId;\n                                                   \n  readonly name: DashboardName;\n                                                                                                                                                                                                                         \n  readonly parameters?: Parameters;\n                                                                                                                                                                                                                                                             \n  readonly permissions?: ResourcePermissionList;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \n  readonly sourceEntity: DashboardSourceEntity;\n                                                                                                              \n  readonly tags?: TagList;\n                                                                                    \n  readonly versionDescription?: VersionDescription;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n  readonly dashboardPublishOptions?: DashboardPublishOptions;\n                                                                                                                                                                                                                                                                                 \n  readonly themeArn?: Arn;\n}\nexport interface CreateDashboardResponse {\n                                          \n  readonly arn?: Arn;\n                                                                                                             \n  readonly versionArn?: Arn;\n                                          \n  readonly dashboardId?: RestrictiveResourceId;\n                                                              \n  readonly creationStatus?: ResourceStatus;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface CreateDataSetRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                                                      \n  readonly dataSetId: ResourceId;\n                                                  \n  readonly name: ResourceName;\n                                                                                                \n  readonly physicalTableMap: PhysicalTableMap;\n                                                                                                    \n  readonly logicalTableMap?: LogicalTableMap;\n                                                                          \n  readonly importMode: DataSetImportMode;\n                                                                                                                                           \n  readonly columnGroups?: ColumnGroupList;\n                                                                                        \n  readonly fieldFolders?: FieldFolderMap;\n                                                               \n  readonly permissions?: ResourcePermissionList;\n                                                                                           \n  readonly rowLevelPermissionDataSet?: RowLevelPermissionDataSet;\n                                                                                   \n  readonly columnLevelPermissionRules?: ColumnLevelPermissionRuleList;\n                                                                                                            \n  readonly tags?: TagList;\n}\nexport interface CreateDataSetResponse {\n                                                               \n  readonly arn?: Arn;\n                                                                                                                       \n  readonly dataSetId?: ResourceId;\n                                                                                                                           \n  readonly ingestionArn?: Arn;\n                                                                                                                         \n  readonly ingestionId?: ResourceId;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface CreateDataSourceRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                                  \n  readonly dataSourceId: ResourceId;\n                                                    \n  readonly name: ResourceName;\n                                                                                                                                                                                                                                                                                                                                                                                   \n  readonly type: DataSourceType;\n                                                                                          \n  readonly dataSourceParameters?: DataSourceParameters;\n                                                                                                                                                                      \n  readonly credentials?: DataSourceCredentials;\n                                                                   \n  readonly permissions?: ResourcePermissionList;\n                                                                                                                                    \n  readonly vpcConnectionProperties?: VpcConnectionProperties;\n                                                                                                                    \n  readonly sslProperties?: SslProperties;\n                                                                                                                \n  readonly tags?: TagList;\n}\nexport interface CreateDataSourceResponse {\n                                                                   \n  readonly arn?: Arn;\n                                                                                                  \n  readonly dataSourceId?: ResourceId;\n                                                        \n  readonly creationStatus?: ResourceStatus;\n                                                       \n  readonly requestId?: String;\n                                                \n\n  readonly status?: StatusCode;\n}\nexport interface CreateGroupMembershipRequest {\n                                                                                   \n  readonly memberName: GroupMemberName;\n                                                                        \n  readonly groupName: GroupName;\n                                                                                                                                                             \n  readonly awsAccountId: AwsAccountId;\n                                                                          \n  readonly namespace: Namespace;\n}\nexport interface CreateGroupMembershipResponse {\n                                  \n  readonly groupMember?: GroupMember;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface CreateGroupRequest {\n                                                              \n  readonly groupName: GroupName;\n                                                                     \n  readonly description?: GroupDescription;\n                                                                                                                                                             \n  readonly awsAccountId: AwsAccountId;\n                                                                          \n  readonly namespace: Namespace;\n}\nexport interface CreateGroupResponse {\n                                       \n  readonly group?: Group;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface CreateIAMPolicyAssignmentRequest {\n                                                                                                                \n  readonly awsAccountId: AwsAccountId;\n                                                                                                         \n  readonly assignmentName: IAMPolicyAssignmentName;\n                                                                                                                                                                                                                                                                                                                                                \n  readonly assignmentStatus: AssignmentStatus;\n                                                                                                                     \n  readonly policyArn?: Arn;\n                                                                                             \n  readonly identities?: IdentityMap;\n                                                            \n  readonly namespace: Namespace;\n}\nexport interface CreateIAMPolicyAssignmentResponse {\n                                                                                             \n  readonly assignmentName?: IAMPolicyAssignmentName;\n                                           \n  readonly assignmentId?: String;\n                                                                                                                                                                                                                                                                                                                                                \n  readonly assignmentStatus?: AssignmentStatus;\n                                                                                                                            \n  readonly policyArn?: Arn;\n                                                                                          \n  readonly identities?: IdentityMap;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface CreateIngestionRequest {\n                                                             \n  readonly dataSetId: string;\n                                         \n  readonly ingestionId: IngestionId;\n                                    \n  readonly awsAccountId: AwsAccountId;\n}\nexport interface CreateIngestionResponse {\n                                                                       \n  readonly arn?: Arn;\n                                         \n  readonly ingestionId?: IngestionId;\n                                      \n  readonly ingestionStatus?: IngestionStatus;\n                                                       \n  readonly requestId?: string;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface CreateNamespaceRequest {\n                                                                                                \n  readonly awsAccountId: AwsAccountId;\n                                                                             \n  readonly namespace: Namespace;\n                                                                                                                                        \n  readonly identityStore: IdentityStore;\n                                                                                             \n  readonly tags?: TagList;\n}\nexport interface CreateNamespaceResponse {\n                                                                 \n  readonly arn?: Arn;\n                                                                \n  readonly name?: Namespace;\n                                                                                                                                                                  \n  readonly capacityRegion?: String;\n                                                                                                                                                                                                                                                                                                                                  \n  readonly creationStatus?: NamespaceStatus;\n                                                                                                                                        \n  readonly identityStore?: IdentityStore;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface CreateTemplateAliasRequest {\n                                                                                                     \n  readonly awsAccountId: AwsAccountId;\n                                        \n  readonly templateId: RestrictiveResourceId;\n                                                                                                                                                                                                      \n  readonly aliasName: AliasName;\n                                                    \n  readonly templateVersionNumber: VersionNumber;\n}\nexport interface CreateTemplateAliasResponse {\n                                                      \n  readonly templateAlias?: TemplateAlias;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface CreateTemplateRequest {\n                                                                                                                                                             \n  readonly awsAccountId: AwsAccountId;\n                                                                                                                            \n  readonly templateId: RestrictiveResourceId;\n                                                 \n  readonly name?: TemplateName;\n                                                                          \n  readonly permissions?: ResourcePermissionList;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \n  readonly sourceEntity: TemplateSourceEntity;\n                                                                                                             \n  readonly tags?: TagList;\n                                                                                                                                                                                                                                                                                                               \n  readonly versionDescription?: VersionDescription;\n}\nexport interface CreateTemplateResponse {\n                                          \n  readonly arn?: Arn;\n                                                                                                  \n  readonly versionArn?: Arn;\n                                        \n  readonly templateId?: RestrictiveResourceId;\n                                              \n  readonly creationStatus?: ResourceStatus;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface CreateThemeAliasRequest {\n                                                                                           \n  readonly awsAccountId: AwsAccountId;\n                                           \n  readonly themeId: RestrictiveResourceId;\n                                                                                                                                                                                               \n  readonly aliasName: AliasName;\n                                                 \n  readonly themeVersionNumber: VersionNumber;\n}\nexport interface CreateThemeAliasResponse {\n                                                   \n  readonly themeAlias?: ThemeAlias;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface CreateThemeRequest {\n                                                                                 \n  readonly awsAccountId: AwsAccountId;\n                                                                                                                        \n  readonly themeId: RestrictiveResourceId;\n                                              \n  readonly name: ThemeName;\n                                                                                                                                                                                                                                                                  \n  readonly baseThemeId: RestrictiveResourceId;\n                                                                                                                                                                                                                                              \n  readonly versionDescription?: VersionDescription;\n                                                                                      \n  readonly configuration: ThemeConfiguration;\n                                                                                    \n  readonly permissions?: ResourcePermissionList;\n                                                                                                                \n  readonly tags?: TagList;\n}\nexport interface CreateThemeResponse {\n                                                              \n  readonly arn?: Arn;\n                                                                  \n  readonly versionArn?: Arn;\n                                     \n  readonly themeId?: RestrictiveResourceId;\n                                           \n  readonly creationStatus?: ResourceStatus;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface CredentialPair {\n                           \n  readonly username: Username;\n                          \n  readonly password: Password;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n  readonly alternateDataSourceParameters?: DataSourceParametersList;\n}\nexport interface CustomSql {\n                                                                   \n  readonly dataSourceArn: Arn;\n                                                         \n  readonly name: CustomSqlName;\n                               \n  readonly sqlQuery: SqlQuery;\n                                                                 \n  readonly columns?: InputColumnList;\n}\nexport type CustomSqlName = string;\nexport interface Dashboard {\n                              \n  readonly dashboardId?: RestrictiveResourceId;\n                                                                \n  readonly arn?: Arn;\n                                                  \n  readonly name?: DashboardName;\n                         \n  readonly version?: DashboardVersion;\n                                                        \n  readonly createdTime?: Timestamp;\n                                                               \n  readonly lastPublishedTime?: Timestamp;\n                                                             \n  readonly lastUpdatedTime?: Timestamp;\n}\nexport type DashboardBehavior = 'ENABLED' | 'DISABLED' | string;\nexport interface DashboardError {\n                      \n  readonly type?: DashboardErrorType;\n                         \n  readonly message?: NonEmptyString;\n}\nexport type DashboardErrorList = DashboardError[];\nexport type DashboardErrorType = 'ACCESS_DENIED' | 'SOURCE_NOT_FOUND' | 'DATA_SET_NOT_FOUND' | 'INTERNAL_FAILURE' | 'PARAMETER_VALUE_INCOMPATIBLE' | 'PARAMETER_TYPE_INVALID' | 'PARAMETER_NOT_FOUND' | 'COLUMN_TYPE_MISMATCH' | 'COLUMN_GEOGRAPHIC_ROLE_MISMATCH' | 'COLUMN_REPLACEMENT_MISSING' | string;\nexport type DashboardFilterAttribute = 'QUICKSIGHT_USER' | string;\nexport type DashboardName = string;\nexport interface DashboardPublishOptions {\n                                                    \n  readonly adHocFilteringOption?: AdHocFilteringOption;\n                                       \n  readonly exportToCSVOption?: ExportToCSVOption;\n                                       \n  readonly sheetControlsOption?: SheetControlsOption;\n}\nexport interface DashboardSearchFilter {\n                                                                                                                   \n  readonly operator: FilterOperator;\n                                                                                                                \n  readonly name?: DashboardFilterAttribute;\n                                                                                                                                                                                            \n  readonly value?: String;\n}\nexport type DashboardSearchFilterList = DashboardSearchFilter[];\nexport interface DashboardSourceEntity {\n                                 \n  readonly sourceTemplate?: DashboardSourceTemplate;\n}\nexport interface DashboardSourceTemplate {\n                                    \n  readonly dataSetReferences: DataSetReferenceList;\n                                                                \n  readonly arn: Arn;\n}\nexport interface DashboardSummary {\n                                                                \n  readonly arn?: Arn;\n                              \n  readonly dashboardId?: RestrictiveResourceId;\n                                                  \n  readonly name?: DashboardName;\n                                                          \n  readonly createdTime?: Timestamp;\n                                                               \n  readonly lastUpdatedTime?: Timestamp;\n                                          \n  readonly publishedVersionNumber?: VersionNumber;\n                                                                 \n  readonly lastPublishedTime?: Timestamp;\n}\nexport type DashboardSummaryList = DashboardSummary[];\nexport type DashboardUIState = 'EXPANDED' | 'COLLAPSED' | string;\nexport interface DashboardVersion {\n                                                                  \n  readonly createdTime?: Timestamp;\n                                                               \n  readonly errors?: DashboardErrorList;\n                                                                  \n  readonly versionNumber?: VersionNumber;\n                                                \n  readonly status?: ResourceStatus;\n                                                                \n  readonly arn?: Arn;\n                                   \n  readonly sourceEntityArn?: Arn;\n                                                                                                                            \n  readonly dataSetArns?: DataSetArnsList;\n                             \n  readonly description?: VersionDescription;\n                                                                                 \n  readonly themeArn?: Arn;\n                                                                                                   \n  readonly sheets?: SheetList;\n}\nexport interface DashboardVersionSummary {\n                                                                \n  readonly arn?: Arn;\n                                                                  \n  readonly createdTime?: Timestamp;\n                                \n  readonly versionNumber?: VersionNumber;\n                                                \n  readonly status?: ResourceStatus;\n                                   \n  readonly sourceEntityArn?: Arn;\n                             \n  readonly description?: VersionDescription;\n}\nexport type DashboardVersionSummaryList = DashboardVersionSummary[];\nexport interface DataColorPalette {\n                                                      \n  readonly colors?: ColorList;\n                                                                                          \n  readonly minMaxGradient?: ColorList;\n                                                                                                            \n  readonly emptyFillColor?: HexColor;\n}\nexport interface DataSet {\n                                                                \n  readonly arn?: Arn;\n                                       \n  readonly dataSetId?: ResourceId;\n                                                \n  readonly name?: ResourceName;\n                                                        \n  readonly createdTime?: Timestamp;\n                                                             \n  readonly lastUpdatedTime?: Timestamp;\n                                                                                                \n  readonly physicalTableMap?: PhysicalTableMap;\n                                                                                                    \n  readonly logicalTableMap?: LogicalTableMap;\n                                                                                                                              \n  readonly outputColumns?: OutputColumnList;\n                                                                                       \n  readonly importMode?: DataSetImportMode;\n                                                                                                                       \n  readonly consumedSpiceCapacityInBytes?: Long;\n                                                                                                                                                  \n  readonly columnGroups?: ColumnGroupList;\n                                                                                        \n  readonly fieldFolders?: FieldFolderMap;\n                                                                      \n  readonly rowLevelPermissionDataSet?: RowLevelPermissionDataSet;\n                                                                                   \n  readonly columnLevelPermissionRules?: ColumnLevelPermissionRuleList;\n}\nexport type DataSetArnsList = Arn[];\nexport interface DataSetConfiguration {\n                             \n  readonly placeholder?: String;\n                                \n  readonly dataSetSchema?: DataSetSchema;\n                                                                         \n  readonly columnGroupSchemaList?: ColumnGroupSchemaList;\n}\nexport type DataSetConfigurationList = DataSetConfiguration[];\nexport type DataSetImportMode = 'SPICE' | 'DIRECT_QUERY' | string;\nexport type DataSetName = string;\nexport interface DataSetReference {\n                                     \n  readonly dataSetPlaceholder: NonEmptyString;\n                                                    \n  readonly dataSetArn: Arn;\n}\nexport type DataSetReferenceList = DataSetReference[];\nexport interface DataSetSchema {\n                                                                   \n  readonly columnSchemaList?: ColumnSchemaList;\n}\nexport interface DataSetSummary {\n                                                               \n  readonly arn?: Arn;\n                                       \n  readonly dataSetId?: ResourceId;\n                                                \n  readonly name?: ResourceName;\n                                                        \n  readonly createdTime?: Timestamp;\n                                                             \n  readonly lastUpdatedTime?: Timestamp;\n                                                                                       \n  readonly importMode?: DataSetImportMode;\n                                                                      \n  readonly rowLevelPermissionDataSet?: RowLevelPermissionDataSet;\n                                                                                              \n  readonly columnLevelPermissionRulesApplied?: Boolean;\n}\nexport type DataSetSummaryList = DataSetSummary[];\nexport interface DataSource {\n                                                                   \n  readonly arn?: Arn;\n                                                                                                  \n  readonly dataSourceId?: ResourceId;\n                                                    \n  readonly name?: ResourceName;\n                                                                                                                    \n  readonly type?: DataSourceType;\n                                                \n  readonly status?: ResourceStatus;\n                                                            \n  readonly createdTime?: Timestamp;\n                                                                 \n  readonly lastUpdatedTime?: Timestamp;\n                                                                                                                                                                                                               \n  readonly dataSourceParameters?: DataSourceParameters;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n  readonly alternateDataSourceParameters?: DataSourceParametersList;\n                                                                                                                                                                                \n  readonly vpcConnectionProperties?: VpcConnectionProperties;\n                                                                                                                    \n  readonly sslProperties?: SslProperties;\n                                                                                           \n  readonly errorInfo?: DataSourceErrorInfo;\n}\nexport interface DataSourceCredentials {\n                                                                           \n  readonly credentialPair?: CredentialPair;\n                                                                                                                                                                                                                                                                           \n  readonly copySourceArn?: CopySourceArn;\n}\nexport interface DataSourceErrorInfo {\n                            \n  readonly type?: DataSourceErrorInfoType;\n                               \n  readonly message?: String;\n}\nexport type DataSourceErrorInfoType = 'ACCESS_DENIED' | 'COPY_SOURCE_NOT_FOUND' | 'TIMEOUT' | 'ENGINE_VERSION_NOT_SUPPORTED' | 'UNKNOWN_HOST' | 'GENERIC_SQL_FAILURE' | 'CONFLICT' | 'UNKNOWN' | string;\nexport type DataSourceList = DataSource[];\nexport interface DataSourceParameters {\n                                                         \n  readonly amazonElasticsearchParameters?: AmazonElasticsearchParameters;\n                                          \n  readonly athenaParameters?: AthenaParameters;\n                                                \n  readonly auroraParameters?: AuroraParameters;\n                                              \n  readonly auroraPostgreSqlParameters?: AuroraPostgreSqlParameters;\n                                              \n  readonly awsIotAnalyticsParameters?: AwsIotAnalyticsParameters;\n                                 \n  readonly jiraParameters?: JiraParameters;\n                                    \n  readonly mariaDbParameters?: MariaDbParameters;\n                                  \n  readonly mySqlParameters?: MySqlParameters;\n                                   \n  readonly oracleParameters?: OracleParameters;\n                                       \n  readonly postgreSqlParameters?: PostgreSqlParameters;\n                                   \n  readonly prestoParameters?: PrestoParameters;\n                                       \n  readonly rdsParameters?: RdsParameters;\n                                            \n  readonly redshiftParameters?: RedshiftParameters;\n                               \n  readonly s3Parameters?: S3Parameters;\n                                       \n  readonly serviceNowParameters?: ServiceNowParameters;\n                                      \n  readonly snowflakeParameters?: SnowflakeParameters;\n                                  \n  readonly sparkParameters?: SparkParameters;\n                                       \n  readonly sqlServerParameters?: SqlServerParameters;\n                                     \n  readonly teradataParameters?: TeradataParameters;\n                                    \n  readonly twitterParameters?: TwitterParameters;\n}\nexport type DataSourceParametersList = DataSourceParameters[];\nexport type DataSourceType = 'ADOBE_ANALYTICS' | 'AMAZON_ELASTICSEARCH' | 'ATHENA' | 'AURORA' | 'AURORA_POSTGRESQL' | 'AWS_IOT_ANALYTICS' | 'GITHUB' | 'JIRA' | 'MARIADB' | 'MYSQL' | 'ORACLE' | 'POSTGRESQL' | 'PRESTO' | 'REDSHIFT' | 'S3' | 'SALESFORCE' | 'SERVICENOW' | 'SNOWFLAKE' | 'SPARK' | 'SQLSERVER' | 'TERADATA' | 'TWITTER' | 'TIMESTREAM' | string;\nexport type Database = string;\nexport interface DateTimeParameter {\n                                                            \n  readonly name: NonEmptyString;\n                                                        \n  readonly values: TimestampList;\n}\nexport type DateTimeParameterList = DateTimeParameter[];\nexport interface DecimalParameter {\n                                                          \n  readonly name: NonEmptyString;\n                                                      \n  readonly values: DoubleList;\n}\nexport type DecimalParameterList = DecimalParameter[];\nexport interface DeleteAccountCustomizationRequest {\n                                                                                                                      \n  readonly awsAccountId: AwsAccountId;\n                                                                                       \n  readonly namespace?: Namespace;\n}\nexport interface DeleteAccountCustomizationResponse {\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DeleteAnalysisRequest {\n                                                                                \n  readonly awsAccountId: AwsAccountId;\n                                                             \n  readonly analysisId: RestrictiveResourceId;\n                                                                                                                                                                                                                                       \n  readonly recoveryWindowInDays?: RecoveryWindowInDays;\n                                                                                                                                                                                                                 \n  readonly forceDeleteWithoutRecovery?: boolean;\n}\nexport interface DeleteAnalysisResponse {\n                                                \n  readonly status?: StatusCode;\n                                                                        \n  readonly arn?: Arn;\n                                                \n  readonly analysisId?: RestrictiveResourceId;\n                                                                                \n  readonly deletionTime?: Timestamp;\n                                                       \n  readonly requestId?: String;\n}\nexport interface DeleteDashboardRequest {\n                                                                                            \n  readonly awsAccountId: AwsAccountId;\n                                          \n  readonly dashboardId: RestrictiveResourceId;\n                                                                                                                                                         \n  readonly versionNumber?: VersionNumber;\n}\nexport interface DeleteDashboardResponse {\n                                                \n  readonly status?: StatusCode;\n                                                                                      \n  readonly arn?: Arn;\n                                         \n  readonly dashboardId?: RestrictiveResourceId;\n                                                       \n  readonly requestId?: String;\n}\nexport interface DeleteDataSetRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                                                       \n  readonly dataSetId: ResourceId;\n}\nexport interface DeleteDataSetResponse {\n                                                               \n  readonly arn?: Arn;\n                                                                                                                       \n  readonly dataSetId?: ResourceId;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DeleteDataSourceRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                                  \n  readonly dataSourceId: ResourceId;\n}\nexport interface DeleteDataSourceResponse {\n                                                                                    \n  readonly arn?: Arn;\n                                                                                                  \n  readonly dataSourceId?: ResourceId;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DeleteGroupMembershipRequest {\n                                                                                        \n  readonly memberName: GroupMemberName;\n                                                                             \n  readonly groupName: GroupName;\n                                                                                                                                                             \n  readonly awsAccountId: AwsAccountId;\n                                                                          \n  readonly namespace: Namespace;\n}\nexport interface DeleteGroupMembershipResponse {\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DeleteGroupRequest {\n                                                               \n  readonly groupName: GroupName;\n                                                                                                                                                             \n  readonly awsAccountId: AwsAccountId;\n                                                                          \n  readonly namespace: Namespace;\n}\nexport interface DeleteGroupResponse {\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DeleteIAMPolicyAssignmentRequest {\n                                                                                       \n  readonly awsAccountId: AwsAccountId;\n                                            \n  readonly assignmentName: IAMPolicyAssignmentName;\n                                                            \n  readonly namespace: Namespace;\n}\nexport interface DeleteIAMPolicyAssignmentResponse {\n                                            \n  readonly assignmentName?: IAMPolicyAssignmentName;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DeleteNamespaceRequest {\n                                                                                                  \n  readonly awsAccountId: AwsAccountId;\n                                                       \n  readonly namespace: Namespace;\n}\nexport interface DeleteNamespaceResponse {\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DeleteTemplateAliasRequest {\n                                                                            \n  readonly awsAccountId: AwsAccountId;\n                                                                         \n  readonly templateId: RestrictiveResourceId;\n                                                                                                                                                                                                                                                                         \n  readonly aliasName: AliasName;\n}\nexport interface DeleteTemplateAliasResponse {\n                                                \n  readonly status?: StatusCode;\n                                                                     \n  readonly templateId?: RestrictiveResourceId;\n                                                 \n  readonly aliasName?: AliasName;\n                                                                                   \n  readonly arn?: Arn;\n                                                       \n  readonly requestId?: String;\n}\nexport interface DeleteTemplateRequest {\n                                                                                           \n  readonly awsAccountId: AwsAccountId;\n                                                           \n  readonly templateId: RestrictiveResourceId;\n                                                                                                                                                                           \n  readonly versionNumber?: VersionNumber;\n}\nexport interface DeleteTemplateResponse {\n                                                       \n  readonly requestId?: String;\n                                                                \n  readonly arn?: Arn;\n                                        \n  readonly templateId?: RestrictiveResourceId;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DeleteThemeAliasRequest {\n                                                                                   \n  readonly awsAccountId: AwsAccountId;\n                                                                      \n  readonly themeId: RestrictiveResourceId;\n                                                               \n  readonly aliasName: AliasName;\n}\nexport interface DeleteThemeAliasResponse {\n                                              \n  readonly aliasName?: AliasName;\n                                                                                              \n  readonly arn?: Arn;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n                                                                  \n  readonly themeId?: RestrictiveResourceId;\n}\nexport interface DeleteThemeRequest {\n                                                                                        \n  readonly awsAccountId: AwsAccountId;\n                                                             \n  readonly themeId: RestrictiveResourceId;\n                                                                                                                                                                                            \n  readonly versionNumber?: VersionNumber;\n}\nexport interface DeleteThemeResponse {\n                                                                \n  readonly arn?: Arn;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n                                     \n  readonly themeId?: RestrictiveResourceId;\n}\nexport interface DeleteUserByPrincipalIdRequest {\n                                              \n  readonly principalId: String;\n                                                                                                                                                            \n  readonly awsAccountId: AwsAccountId;\n                                                                          \n  readonly namespace: Namespace;\n}\nexport interface DeleteUserByPrincipalIdResponse {\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DeleteUserRequest {\n                                                              \n  readonly userName: UserName;\n                                                                                                                                                            \n  readonly awsAccountId: AwsAccountId;\n                                                                          \n  readonly namespace: Namespace;\n}\nexport interface DeleteUserResponse {\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport type Delimiter = string;\nexport interface DescribeAccountCustomizationRequest {\n                                                                                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                                  \n  readonly namespace?: Namespace;\n                                                                                                                                                                                                                                                                                                                                                                                          \n  readonly resolved?: boolean;\n}\nexport interface DescribeAccountCustomizationResponse {\n                                                                                                             \n  readonly arn?: Arn;\n                                                                   \n  readonly awsAccountId?: AwsAccountId;\n                                                                 \n  readonly namespace?: Namespace;\n                                                                                    \n  readonly accountCustomization?: AccountCustomization;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DescribeAccountSettingsRequest {\n                                                                                             \n  readonly awsAccountId: AwsAccountId;\n}\nexport interface DescribeAccountSettingsResponse {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n  readonly accountSettings?: AccountSettings;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DescribeAnalysisPermissionsRequest {\n                                                                                                                                                                     \n  readonly awsAccountId: AwsAccountId;\n                                                                                                                \n  readonly analysisId: RestrictiveResourceId;\n}\nexport interface DescribeAnalysisPermissionsResponse {\n                                                                            \n  readonly analysisId?: RestrictiveResourceId;\n                                                                                                    \n  readonly analysisArn?: Arn;\n                                                                                                             \n  readonly permissions?: ResourcePermissionList;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface DescribeAnalysisRequest {\n                                                                                                                                 \n  readonly awsAccountId: AwsAccountId;\n                                                                                                          \n  readonly analysisId: RestrictiveResourceId;\n}\nexport interface DescribeAnalysisResponse {\n                                                                                                                \n  readonly analysis?: Analysis;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface DescribeDashboardPermissionsRequest {\n                                                                                                              \n  readonly awsAccountId: AwsAccountId;\n                                                                        \n  readonly dashboardId: RestrictiveResourceId;\n}\nexport interface DescribeDashboardPermissionsResponse {\n                                          \n  readonly dashboardId?: RestrictiveResourceId;\n                                                                 \n  readonly dashboardArn?: Arn;\n                                                                             \n  readonly permissions?: ResourcePermissionList;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface DescribeDashboardRequest {\n                                                                                              \n  readonly awsAccountId: AwsAccountId;\n                                          \n  readonly dashboardId: RestrictiveResourceId;\n                                                                                                                                             \n  readonly versionNumber?: VersionNumber;\n                                \n  readonly aliasName?: AliasName;\n}\nexport interface DescribeDashboardResponse {\n                                                 \n  readonly dashboard?: Dashboard;\n                                                 \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface DescribeDataSetPermissionsRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                                                       \n  readonly dataSetId: ResourceId;\n}\nexport interface DescribeDataSetPermissionsResponse {\n                                                               \n  readonly dataSetArn?: Arn;\n                                                                                                                       \n  readonly dataSetId?: ResourceId;\n                                                               \n  readonly permissions?: ResourcePermissionList;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DescribeDataSetRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                                                       \n  readonly dataSetId: ResourceId;\n}\nexport interface DescribeDataSetResponse {\n                                            \n  readonly dataSet?: DataSet;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DescribeDataSourcePermissionsRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                                  \n  readonly dataSourceId: ResourceId;\n}\nexport interface DescribeDataSourcePermissionsResponse {\n                                                                   \n  readonly dataSourceArn?: Arn;\n                                                                                                  \n  readonly dataSourceId?: ResourceId;\n                                                                   \n  readonly permissions?: ResourcePermissionList;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DescribeDataSourceRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                                  \n  readonly dataSourceId: ResourceId;\n}\nexport interface DescribeDataSourceResponse {\n                                                    \n  readonly dataSource?: DataSource;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DescribeGroupRequest {\n                                                                 \n  readonly groupName: GroupName;\n                                                                                                                                                             \n  readonly awsAccountId: AwsAccountId;\n                                                                          \n  readonly namespace: Namespace;\n}\nexport interface DescribeGroupResponse {\n                                       \n  readonly group?: Group;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DescribeIAMPolicyAssignmentRequest {\n                                                                                                  \n  readonly awsAccountId: AwsAccountId;\n                                                                \n  readonly assignmentName: IAMPolicyAssignmentName;\n                                                            \n  readonly namespace: Namespace;\n}\nexport interface DescribeIAMPolicyAssignmentResponse {\n                                                                  \n  readonly iAMPolicyAssignment?: IAMPolicyAssignment;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DescribeIngestionRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                             \n  readonly dataSetId: string;\n                                         \n  readonly ingestionId: IngestionId;\n}\nexport interface DescribeIngestionResponse {\n                                                 \n  readonly ingestion?: Ingestion;\n                                                       \n  readonly requestId?: string;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DescribeNamespaceRequest {\n                                                                                                             \n  readonly awsAccountId: AwsAccountId;\n                                                         \n  readonly namespace: Namespace;\n}\nexport interface DescribeNamespaceResponse {\n                                                                                                                                                                                                                                                                                                                                                                                                   \n  readonly namespace?: NamespaceInfoV2;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DescribeTemplateAliasRequest {\n                                                                                                   \n  readonly awsAccountId: AwsAccountId;\n                                         \n  readonly templateId: RestrictiveResourceId;\n                                                                                                                                                                                                                                                                                                                              \n  readonly aliasName: AliasName;\n}\nexport interface DescribeTemplateAliasResponse {\n                                                      \n  readonly templateAlias?: TemplateAlias;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface DescribeTemplatePermissionsRequest {\n                                                                                             \n  readonly awsAccountId: AwsAccountId;\n                                         \n  readonly templateId: RestrictiveResourceId;\n}\nexport interface DescribeTemplatePermissionsResponse {\n                                         \n  readonly templateId?: RestrictiveResourceId;\n                                                                \n  readonly templateArn?: Arn;\n                                                                          \n  readonly permissions?: ResourcePermissionList;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DescribeTemplateRequest {\n                                                                                             \n  readonly awsAccountId: AwsAccountId;\n                                         \n  readonly templateId: RestrictiveResourceId;\n                                                                                                                                                                       \n  readonly versionNumber?: VersionNumber;\n                                                                                                                                                                                                                                                                                                                         \n  readonly aliasName?: AliasName;\n}\nexport interface DescribeTemplateResponse {\n                                                                            \n  readonly template?: Template;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface DescribeThemeAliasRequest {\n                                                                                                \n  readonly awsAccountId: AwsAccountId;\n                                      \n  readonly themeId: RestrictiveResourceId;\n                                                                       \n  readonly aliasName: AliasName;\n}\nexport interface DescribeThemeAliasResponse {\n                                                   \n  readonly themeAlias?: ThemeAlias;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface DescribeThemePermissionsRequest {\n                                                                                          \n  readonly awsAccountId: AwsAccountId;\n                                                                                \n  readonly themeId: RestrictiveResourceId;\n}\nexport interface DescribeThemePermissionsResponse {\n                                      \n  readonly themeId?: RestrictiveResourceId;\n                                                             \n  readonly themeArn?: Arn;\n                                                                 \n  readonly permissions?: ResourcePermissionList;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface DescribeThemeRequest {\n                                                                                          \n  readonly awsAccountId: AwsAndAccountId;\n                                      \n  readonly themeId: RestrictiveResourceId;\n                                                                                                                                                                 \n  readonly versionNumber?: VersionNumber;\n                                                                                                                                                                                                                                                                                                                \n  readonly aliasName?: AliasName;\n}\nexport interface DescribeThemeResponse {\n                                                                         \n  readonly theme?: Theme;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface DescribeUserRequest {\n                                                                \n  readonly userName: UserName;\n                                                                                                                                                            \n  readonly awsAccountId: AwsAccountId;\n                                                                          \n  readonly namespace: Namespace;\n}\nexport interface DescribeUserResponse {\n                               \n  readonly user?: User;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport type Domain = string;\nexport type Double = number;\nexport type DoubleList = Double[];\nexport type Edition = 'STANDARD' | 'ENTERPRISE' | string;\nexport type EmbeddingIdentityType = 'IAM' | 'QUICKSIGHT' | 'ANONYMOUS' | string;\nexport type EmbeddingUrl = string;\nexport type EntryPoint = string;\nexport interface ErrorInfo {\n                            \n  readonly type?: IngestionErrorType;\n                               \n  readonly message?: string;\n}\nexport interface ExportToCSVOption {\n                                     \n  readonly availabilityStatus?: DashboardBehavior;\n}\nexport type Expression = string;\nexport interface FieldFolder {\n                                                    \n  readonly description?: FieldFolderDescription;\n                                                                                    \n  readonly columns?: FolderColumnList;\n}\nexport type FieldFolderDescription = string;\nexport type FieldFolderMap = { [key: string]: FieldFolder };\nexport type FieldFolderPath = string;\nexport type FileFormat = 'CSV' | 'TSV' | 'CLF' | 'ELF' | 'XLSX' | 'JSON' | string;\nexport interface FilterOperation {\n                                                                                                                                              \n  readonly conditionExpression: Expression;\n}\nexport type FilterOperator = 'StringEquals' | string;\nexport type FolderColumnList = String[];\nexport interface GeoSpatialColumnGroup {\n                                                  \n  readonly name: ColumnGroupName;\n                              \n  readonly countryCode: GeoSpatialCountryCode;\n                                           \n  readonly columns: ColumnList;\n}\nexport type GeoSpatialCountryCode = 'US' | string;\nexport type GeoSpatialDataRole = 'COUNTRY' | 'STATE' | 'COUNTY' | 'CITY' | 'POSTCODE' | 'LONGITUDE' | 'LATITUDE' | string;\nexport interface GetDashboardEmbedUrlRequest {\n                                                                                              \n  readonly awsAccountId: AwsAccountId;\n                                                                                                             \n  readonly dashboardId: RestrictiveResourceId;\n                                                                         \n  readonly identityType: EmbeddingIdentityType;\n                                                                                                    \n  readonly sessionLifetimeInMinutes?: SessionLifetimeInMinutes;\n                                                                                                                                 \n  readonly undoRedoDisabled?: Boolean;\n                                                                                                                         \n  readonly resetDisabled?: Boolean;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \n  readonly statePersistenceEnabled?: Boolean;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n  readonly userArn?: Arn;\n                                                                                                                                                         \n  readonly namespace?: Namespace;\n                                                                                                                                                                                                                                                                                                                                                                                                                          \n  readonly additionalDashboardIds?: AdditionalDashboardIdList;\n}\nexport interface GetDashboardEmbedUrlResponse {\n                                                                                                                                                                                                                                                                                           \n  readonly embedUrl?: EmbeddingUrl;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface GetSessionEmbedUrlRequest {\n                                                                                         \n  readonly awsAccountId: AwsAccountId;\n                                                                                                                                                                                                                                                                                                                                                                                                                                            \n  readonly entryPoint?: EntryPoint;\n                                                                                                    \n  readonly sessionLifetimeInMinutes?: SessionLifetimeInMinutes;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \n  readonly userArn?: Arn;\n}\nexport interface GetSessionEmbedUrlResponse {\n                                                                                                                                                                                                                                                                                                     \n  readonly embedUrl?: EmbeddingUrl;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface Group {\n                                                              \n  readonly arn?: Arn;\n                                       \n  readonly groupName?: GroupName;\n                                       \n  readonly description?: GroupDescription;\n                                               \n  readonly principalId?: String;\n}\nexport type GroupDescription = string;\nexport type GroupList = Group[];\nexport interface GroupMember {\n                                                                            \n  readonly arn?: Arn;\n                                                     \n  readonly memberName?: GroupMemberName;\n}\nexport type GroupMemberList = GroupMember[];\nexport type GroupMemberName = string;\nexport type GroupName = string;\nexport interface GutterStyle {\n                                                                                                   \n  readonly show?: boolean;\n}\nexport type HexColor = string;\nexport type Host = string;\nexport interface IAMPolicyAssignment {\n                                    \n  readonly awsAccountId?: AwsAccountId;\n                               \n  readonly assignmentId?: String;\n                                 \n  readonly assignmentName?: IAMPolicyAssignmentName;\n                                                                   \n  readonly policyArn?: Arn;\n                            \n  readonly identities?: IdentityMap;\n                                   \n  readonly assignmentStatus?: AssignmentStatus;\n}\nexport type IAMPolicyAssignmentName = string;\nexport interface IAMPolicyAssignmentSummary {\n                                 \n  readonly assignmentName?: IAMPolicyAssignmentName;\n                                   \n  readonly assignmentStatus?: AssignmentStatus;\n}\nexport type IAMPolicyAssignmentSummaryList = IAMPolicyAssignmentSummary[];\nexport type IdentityMap = { [key: string]: IdentityNameList };\nexport type IdentityName = string;\nexport type IdentityNameList = IdentityName[];\nexport type IdentityStore = 'QUICKSIGHT' | string;\nexport type IdentityType = 'IAM' | 'QUICKSIGHT' | string;\nexport interface Ingestion {\n                                                                \n  readonly arn: Arn;\n                              \n  readonly ingestionId?: IngestionId;\n                                  \n  readonly ingestionStatus: IngestionStatus;\n                                                      \n  readonly errorInfo?: ErrorInfo;\n  readonly rowInfo?: RowInfo;\n  readonly queueInfo?: QueueInfo;\n                                                      \n  readonly createdTime: timestamp;\n                                                                        \n  readonly ingestionTimeInSeconds?: long;\n                                                         \n  readonly ingestionSizeInBytes?: long;\n                                                 \n  readonly requestSource?: IngestionRequestSource;\n                                        \n  readonly requestType?: IngestionRequestType;\n}\nexport type IngestionErrorType = 'FAILURE_TO_ASSUME_ROLE' | 'INGESTION_SUPERSEDED' | 'INGESTION_CANCELED' | 'DATA_SET_DELETED' | 'DATA_SET_NOT_SPICE' | 'S3_UPLOADED_FILE_DELETED' | 'S3_MANIFEST_ERROR' | 'DATA_TOLERANCE_EXCEPTION' | 'SPICE_TABLE_NOT_FOUND' | 'DATA_SET_SIZE_LIMIT_EXCEEDED' | 'ROW_SIZE_LIMIT_EXCEEDED' | 'ACCOUNT_CAPACITY_LIMIT_EXCEEDED' | 'CUSTOMER_ERROR' | 'DATA_SOURCE_NOT_FOUND' | 'IAM_ROLE_NOT_AVAILABLE' | 'CONNECTION_FAILURE' | 'SQL_TABLE_NOT_FOUND' | 'PERMISSION_DENIED' | 'SSL_CERTIFICATE_VALIDATION_FAILURE' | 'OAUTH_TOKEN_FAILURE' | 'SOURCE_API_LIMIT_EXCEEDED_FAILURE' | 'PASSWORD_AUTHENTICATION_FAILURE' | 'SQL_SCHEMA_MISMATCH_ERROR' | 'INVALID_DATE_FORMAT' | 'INVALID_DATAPREP_SYNTAX' | 'SOURCE_RESOURCE_LIMIT_EXCEEDED' | 'SQL_INVALID_PARAMETER_VALUE' | 'QUERY_TIMEOUT' | 'SQL_NUMERIC_OVERFLOW' | 'UNRESOLVABLE_HOST' | 'UNROUTABLE_HOST' | 'SQL_EXCEPTION' | 'S3_FILE_INACCESSIBLE' | 'IOT_FILE_NOT_FOUND' | 'IOT_DATA_SET_FILE_EMPTY' | 'INVALID_DATA_SOURCE_CONFIG' | 'DATA_SOURCE_AUTH_FAILED' | 'DATA_SOURCE_CONNECTION_FAILED' | 'FAILURE_TO_PROCESS_JSON_FILE' | 'INTERNAL_SERVICE_ERROR' | string;\nexport type IngestionId = string;\nexport type IngestionMaxResults = number;\nexport type IngestionRequestSource = 'MANUAL' | 'SCHEDULED' | string;\nexport type IngestionRequestType = 'INITIAL_INGESTION' | 'EDIT' | 'INCREMENTAL_REFRESH' | 'FULL_REFRESH' | string;\nexport type IngestionStatus = 'INITIALIZED' | 'QUEUED' | 'RUNNING' | 'FAILED' | 'COMPLETED' | 'CANCELLED' | string;\nexport type Ingestions = Ingestion[];\nexport interface InputColumn {\n                                                                       \n  readonly name: ColumnName;\n                                             \n  readonly type: InputColumnDataType;\n}\nexport type InputColumnDataType = 'STRING' | 'INTEGER' | 'DECIMAL' | 'DATETIME' | 'BIT' | 'BOOLEAN' | 'JSON' | string;\nexport type InputColumnList = InputColumn[];\nexport type InstanceId = string;\nexport interface IntegerParameter {\n                                                   \n  readonly name: NonEmptyString;\n                                                      \n  readonly values: LongList;\n}\nexport type IntegerParameterList = IntegerParameter[];\nexport interface JiraParameters {\n                                               \n  readonly siteBaseUrl: SiteBaseUrl;\n}\nexport interface JoinInstruction {\n                                                        \n  readonly leftOperand: LogicalTableId;\n                                                         \n  readonly rightOperand: LogicalTableId;\n                                                         \n  readonly leftJoinKeyProperties?: JoinKeyProperties;\n                                                          \n  readonly rightJoinKeyProperties?: JoinKeyProperties;\n                                             \n  readonly type: JoinType;\n                                                                           \n  readonly onClause: OnClause;\n}\nexport interface JoinKeyProperties {\n                                                                                                                                                                            \n  readonly uniqueKey?: Boolean;\n}\nexport type JoinType = 'INNER' | 'OUTER' | 'LEFT' | 'RIGHT' | string;\nexport interface ListAnalysesRequest {\n                                                                      \n  readonly awsAccountId: AwsAccountId;\n                                                                             \n  readonly nextToken?: String;\n                                                         \n  readonly maxResults?: MaxResults;\n}\nexport interface ListAnalysesResponse {\n                                                                          \n  readonly analysisSummaryList?: AnalysisSummaryList;\n                                                                             \n  readonly nextToken?: String;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface ListDashboardVersionsRequest {\n                                                                                                        \n  readonly awsAccountId: AwsAccountId;\n                                          \n  readonly dashboardId: RestrictiveResourceId;\n                                                                                             \n  readonly nextToken?: String;\n                                                                          \n  readonly maxResults?: MaxResults;\n}\nexport interface ListDashboardVersionsResponse {\n                                                                                           \n  readonly dashboardVersionSummaryList?: DashboardVersionSummaryList;\n                                                                                             \n  readonly nextToken?: String;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface ListDashboardsRequest {\n                                                                                            \n  readonly awsAccountId: AwsAccountId;\n                                                                                             \n  readonly nextToken?: String;\n                                                                          \n  readonly maxResults?: MaxResults;\n}\nexport interface ListDashboardsResponse {\n                                                                                                                                                     \n  readonly dashboardSummaryList?: DashboardSummaryList;\n                                                                                             \n  readonly nextToken?: String;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface ListDataSetsRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                             \n  readonly nextToken?: String;\n                                                                          \n  readonly maxResults?: MaxResults;\n}\nexport interface ListDataSetsResponse {\n                                               \n  readonly dataSetSummaries?: DataSetSummaryList;\n                                                                                             \n  readonly nextToken?: String;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface ListDataSourcesRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                             \n  readonly nextToken?: String;\n                                                                          \n  readonly maxResults?: MaxResults;\n}\nexport interface ListDataSourcesResponse {\n                                        \n  readonly dataSources?: DataSourceList;\n                                                                                             \n  readonly nextToken?: String;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface ListGroupMembershipsRequest {\n                                                                                 \n  readonly groupName: GroupName;\n                                                                             \n  readonly nextToken?: String;\n                                                                           \n  readonly maxResults?: MaxResults;\n                                                                                                                                                             \n  readonly awsAccountId: AwsAccountId;\n                                                                          \n  readonly namespace: Namespace;\n}\nexport interface ListGroupMembershipsResponse {\n                                                      \n  readonly groupMemberList?: GroupMemberList;\n                                                                             \n  readonly nextToken?: String;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface ListGroupsRequest {\n                                                                                                                                                             \n  readonly awsAccountId: AwsAccountId;\n                                                                             \n  readonly nextToken?: String;\n                                                         \n  readonly maxResults?: MaxResults;\n                                                                          \n  readonly namespace: Namespace;\n}\nexport interface ListGroupsResponse {\n                                        \n  readonly groupList?: GroupList;\n                                                                             \n  readonly nextToken?: String;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface ListIAMPolicyAssignmentsForUserRequest {\n                                                                         \n  readonly awsAccountId: AwsAccountId;\n                                      \n  readonly userName: UserName;\n                                                                                             \n  readonly nextToken?: String;\n                                                                          \n  readonly maxResults?: MaxResults;\n                                                 \n  readonly namespace: Namespace;\n}\nexport interface ListIAMPolicyAssignmentsForUserResponse {\n                                                      \n  readonly activeAssignments?: ActiveIAMPolicyAssignmentList;\n                                                       \n  readonly requestId?: String;\n                                                                                             \n  readonly nextToken?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface ListIAMPolicyAssignmentsRequest {\n                                                                                      \n  readonly awsAccountId: AwsAccountId;\n                                               \n  readonly assignmentStatus?: AssignmentStatus;\n                                                   \n  readonly namespace: Namespace;\n                                                                                             \n  readonly nextToken?: String;\n                                                                          \n  readonly maxResults?: MaxResults;\n}\nexport interface ListIAMPolicyAssignmentsResponse {\n                                                                   \n  readonly iAMPolicyAssignments?: IAMPolicyAssignmentSummaryList;\n                                                                                             \n  readonly nextToken?: String;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface ListIngestionsRequest {\n                                                             \n  readonly dataSetId: string;\n                                                                                             \n  readonly nextToken?: string;\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                          \n  readonly maxResults?: IngestionMaxResults;\n}\nexport interface ListIngestionsResponse {\n                                          \n  readonly ingestions?: Ingestions;\n                                                                                             \n  readonly nextToken?: string;\n                                                       \n  readonly requestId?: string;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface ListNamespacesRequest {\n                                                                                                          \n  readonly awsAccountId: AwsAccountId;\n                                                                             \n  readonly nextToken?: String;\n                                                         \n  readonly maxResults?: MaxResults;\n}\nexport interface ListNamespacesResponse {\n                                                                                                                                                                                                      \n  readonly namespaces?: Namespaces;\n                                                                             \n  readonly nextToken?: String;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface ListTagsForResourceRequest {\n                                                                                                 \n  readonly resourceArn: Arn;\n}\nexport interface ListTagsForResourceResponse {\n                                                                                                             \n  readonly tags?: TagList;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface ListTemplateAliasesRequest {\n                                                                                                  \n  readonly awsAccountId: AwsAccountId;\n                                         \n  readonly templateId: RestrictiveResourceId;\n                                                                                             \n  readonly nextToken?: String;\n                                                                          \n  readonly maxResults?: MaxResults;\n}\nexport interface ListTemplateAliasesResponse {\n                                                                           \n  readonly templateAliasList?: TemplateAliasList;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n                                                                                             \n  readonly nextToken?: String;\n}\nexport interface ListTemplateVersionsRequest {\n                                                                                           \n  readonly awsAccountId: AwsAccountId;\n                                         \n  readonly templateId: RestrictiveResourceId;\n                                                                                             \n  readonly nextToken?: String;\n                                                                          \n  readonly maxResults?: MaxResults;\n}\nexport interface ListTemplateVersionsResponse {\n                                                                                             \n  readonly templateVersionSummaryList?: TemplateVersionSummaryList;\n                                                                                             \n  readonly nextToken?: String;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface ListTemplatesRequest {\n                                                                                           \n  readonly awsAccountId: AwsAccountId;\n                                                                                             \n  readonly nextToken?: String;\n                                                                          \n  readonly maxResults?: MaxResults;\n}\nexport interface ListTemplatesResponse {\n                                                                                    \n  readonly templateSummaryList?: TemplateSummaryList;\n                                                                                             \n  readonly nextToken?: String;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface ListThemeAliasesRequest {\n                                                                                               \n  readonly awsAccountId: AwsAccountId;\n                                      \n  readonly themeId: RestrictiveResourceId;\n                                                                                             \n  readonly nextToken?: String;\n                                                                          \n  readonly maxResults?: MaxResults;\n}\nexport interface ListThemeAliasesResponse {\n                                                                        \n  readonly themeAliasList?: ThemeAliasList;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n                                                                                             \n  readonly nextToken?: String;\n}\nexport interface ListThemeVersionsRequest {\n                                                                                        \n  readonly awsAccountId: AwsAccountId;\n                                      \n  readonly themeId: RestrictiveResourceId;\n                                                                                             \n  readonly nextToken?: String;\n                                                                          \n  readonly maxResults?: MaxResults;\n}\nexport interface ListThemeVersionsResponse {\n                                                                                          \n  readonly themeVersionSummaryList?: ThemeVersionSummaryList;\n                                                                                             \n  readonly nextToken?: String;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface ListThemesRequest {\n                                                                                        \n  readonly awsAccountId: AwsAccountId;\n                                                                                             \n  readonly nextToken?: String;\n                                                                          \n  readonly maxResults?: MaxResults;\n                                                                                                                                                                                                                                                                                                     \n  readonly type?: ThemeType;\n}\nexport interface ListThemesResponse {\n                                                          \n  readonly themeSummaryList?: ThemeSummaryList;\n                                                                                             \n  readonly nextToken?: String;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface ListUserGroupsRequest {\n                                                                                             \n  readonly userName: UserName;\n                                                                                                                                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                          \n  readonly namespace: Namespace;\n                                                                             \n  readonly nextToken?: String;\n                                                                           \n  readonly maxResults?: MaxResults;\n}\nexport interface ListUserGroupsResponse {\n                                                            \n  readonly groupList?: GroupList;\n                                                                             \n  readonly nextToken?: String;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface ListUsersRequest {\n                                                                                                                                                            \n  readonly awsAccountId: AwsAccountId;\n                                                                             \n  readonly nextToken?: String;\n                                                                           \n  readonly maxResults?: MaxResults;\n                                                                          \n  readonly namespace: Namespace;\n}\nexport interface ListUsersResponse {\n                                   \n  readonly userList?: UserList;\n                                                                             \n  readonly nextToken?: String;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface LogicalTable {\n                                                      \n  readonly alias: LogicalTableAlias;\n                                                                     \n  readonly dataTransforms?: TransformOperationList;\n                                              \n  readonly source: LogicalTableSource;\n}\nexport type LogicalTableAlias = string;\nexport type LogicalTableId = string;\nexport type LogicalTableMap = { [key: string]: LogicalTable };\nexport interface LogicalTableSource {\n                                                                      \n  readonly joinInstruction?: JoinInstruction;\n                                   \n  readonly physicalTableId?: PhysicalTableId;\n}\nexport type Long = number;\nexport type LongList = Long[];\nexport interface ManifestFileLocation {\n                                  \n  readonly bucket: S3Bucket;\n                                                         \n  readonly key: S3Key;\n}\nexport interface MarginStyle {\n                                                                              \n  readonly show?: boolean;\n}\nexport interface MariaDbParameters {\n                      \n  readonly host: Host;\n                      \n  readonly port: Port;\n                          \n  readonly database: Database;\n}\nexport type MaxResults = number;\nexport interface MySqlParameters {\n                      \n  readonly host: Host;\n                      \n  readonly port: Port;\n                          \n  readonly database: Database;\n}\nexport type Namespace = string;\nexport interface NamespaceError {\n                                \n  readonly type?: NamespaceErrorType;\n                                           \n  readonly message?: String;\n}\nexport type NamespaceErrorType = 'PERMISSION_DENIED' | 'INTERNAL_SERVICE_ERROR' | string;\nexport interface NamespaceInfoV2 {\n                                       \n  readonly name?: Namespace;\n                                   \n  readonly arn?: Arn;\n                                          \n  readonly capacityRegion?: String;\n                                                                                       \n  readonly creationStatus?: NamespaceStatus;\n                                                           \n  readonly identityStore?: IdentityStore;\n                                                                       \n  readonly namespaceError?: NamespaceError;\n}\nexport type NamespaceStatus = 'CREATED' | 'CREATING' | 'DELETING' | 'RETRYABLE_FAILURE' | 'NON_RETRYABLE_FAILURE' | string;\nexport type Namespaces = NamespaceInfoV2[];\nexport type NonEmptyString = string;\nexport type OnClause = string;\nexport type OptionalPort = number;\nexport interface OracleParameters {\n                                \n  readonly host: Host;\n                      \n  readonly port: Port;\n                          \n  readonly database: Database;\n}\nexport interface OutputColumn {\n                                                \n  readonly name?: ColumnName;\n                                            \n  readonly description?: ColumnDescriptiveText;\n                      \n  readonly type?: ColumnDataType;\n}\nexport type OutputColumnList = OutputColumn[];\nexport interface Parameters {\n                                   \n  readonly stringParameters?: StringParameterList;\n                                    \n  readonly integerParameters?: IntegerParameterList;\n                                    \n  readonly decimalParameters?: DecimalParameterList;\n                                      \n  readonly dateTimeParameters?: DateTimeParameterList;\n}\nexport type Password = string;\nexport interface PhysicalTable {\n                                                                   \n  readonly relationalTable?: RelationalTable;\n                                                                                      \n  readonly customSql?: CustomSql;\n                                                             \n  readonly s3Source?: S3Source;\n}\nexport type PhysicalTableId = string;\nexport type PhysicalTableMap = { [key: string]: PhysicalTable };\nexport type Port = number;\nexport type PositiveInteger = number;\nexport interface PostgreSqlParameters {\n                      \n  readonly host: Host;\n                      \n  readonly port: Port;\n                          \n  readonly database: Database;\n}\nexport interface PrestoParameters {\n                      \n  readonly host: Host;\n                      \n  readonly port: Port;\n                         \n  readonly catalog: Catalog;\n}\nexport type Principal = string;\nexport type PrincipalList = String[];\nexport interface ProjectOperation {\n                                   \n  readonly projectedColumns: ProjectedColumnList;\n}\nexport type ProjectedColumnList = String[];\nexport type Query = string;\nexport interface QueueInfo {\n                                                \n  readonly waitingOnIngestion: string;\n                                                                                                                        \n  readonly queuedIngestion: string;\n}\nexport interface RdsParameters {\n                             \n  readonly instanceId: InstanceId;\n                          \n  readonly database: Database;\n}\nexport type RecoveryWindowInDays = number;\nexport interface RedshiftParameters {\n                                                                        \n  readonly host?: Host;\n                                                                            \n  readonly port?: OptionalPort;\n                          \n  readonly database: Database;\n                                                                                       \n  readonly clusterId?: ClusterId;\n}\nexport interface RegisterUserRequest {\n                                                                                                                                                                                                                                                                                              \n  readonly identityType: IdentityType;\n                                                                         \n  readonly email: String;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n  readonly userRole: UserRole;\n                                                                                                 \n  readonly iamArn?: String;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n  readonly sessionName?: RoleSessionName;\n                                                                                                                                                            \n  readonly awsAccountId: AwsAccountId;\n                                                                          \n  readonly namespace: Namespace;\n                                                                                                          \n  readonly userName?: UserName;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n  readonly customPermissionsName?: RoleName;\n}\nexport interface RegisterUserResponse {\n                                      \n  readonly user?: User;\n                                                                                                                                                              \n  readonly userInvitationUrl?: String;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface RelationalTable {\n                                                                    \n  readonly dataSourceArn: Arn;\n                                                     \n  readonly catalog?: RelationalTableCatalog;\n                                                                                           \n  readonly schema?: RelationalTableSchema;\n                                                  \n  readonly name: RelationalTableName;\n                                                \n  readonly inputColumns: InputColumnList;\n}\nexport type RelationalTableCatalog = string;\nexport type RelationalTableName = string;\nexport type RelationalTableSchema = string;\nexport interface RenameColumnOperation {\n                                                      \n  readonly columnName: ColumnName;\n                                             \n  readonly newColumnName: ColumnName;\n}\nexport type ResourceId = string;\nexport type ResourceName = string;\nexport interface ResourcePermission {\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n  readonly principal: Principal;\n                                                                  \n  readonly actions: ActionList;\n}\nexport type ResourcePermissionList = ResourcePermission[];\nexport type ResourceStatus = 'CREATION_IN_PROGRESS' | 'CREATION_SUCCESSFUL' | 'CREATION_FAILED' | 'UPDATE_IN_PROGRESS' | 'UPDATE_SUCCESSFUL' | 'UPDATE_FAILED' | 'DELETED' | string;\nexport interface RestoreAnalysisRequest {\n                                                                      \n  readonly awsAccountId: AwsAccountId;\n                                                              \n  readonly analysisId: RestrictiveResourceId;\n}\nexport interface RestoreAnalysisResponse {\n                                                \n  readonly status?: StatusCode;\n                                                                                      \n  readonly arn?: Arn;\n                                                              \n  readonly analysisId?: RestrictiveResourceId;\n                                                       \n  readonly requestId?: String;\n}\nexport type RestrictiveResourceId = string;\nexport type RoleName = string;\nexport type RoleSessionName = string;\nexport interface RowInfo {\n                                                       \n  readonly rowsIngested?: long;\n                                                           \n  readonly rowsDropped?: long;\n}\nexport interface RowLevelPermissionDataSet {\n                                                                                             \n  readonly namespace?: Namespace;\n                                                                                                 \n  readonly arn: Arn;\n                                                                                                                                                    \n  readonly permissionPolicy: RowLevelPermissionPolicy;\n}\nexport type RowLevelPermissionPolicy = 'GRANT_ACCESS' | 'DENY_ACCESS' | string;\nexport type S3Bucket = string;\nexport type S3Key = string;\nexport interface S3Parameters {\n                                                                                                                        \n  readonly manifestFileLocation: ManifestFileLocation;\n}\nexport interface S3Source {\n                                                                    \n  readonly dataSourceArn: Arn;\n                                                                              \n  readonly uploadSettings?: UploadSettings;\n                                                             \n  readonly inputColumns: InputColumnList;\n}\nexport interface SearchAnalysesRequest {\n                                                                                                \n  readonly awsAccountId: AwsAccountId;\n                                                                                            \n  readonly filters: AnalysisSearchFilterList;\n                                                                             \n  readonly nextToken?: String;\n                                                         \n  readonly maxResults?: MaxResults;\n}\nexport interface SearchAnalysesResponse {\n                                                                        \n  readonly analysisSummaryList?: AnalysisSummaryList;\n                                                                             \n  readonly nextToken?: String;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface SearchDashboardsRequest {\n                                                                                                        \n  readonly awsAccountId: AwsAccountId;\n                                                                                                                                                                                                                                                         \n  readonly filters: DashboardSearchFilterList;\n                                                                                             \n  readonly nextToken?: String;\n                                                                          \n  readonly maxResults?: MaxResults;\n}\nexport interface SearchDashboardsResponse {\n                                                                                               \n  readonly dashboardSummaryList?: DashboardSummaryList;\n                                                                                             \n  readonly nextToken?: String;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface ServiceNowParameters {\n                                      \n  readonly siteBaseUrl: SiteBaseUrl;\n}\nexport type SessionLifetimeInMinutes = number;\nexport interface Sheet {\n                                                               \n  readonly sheetId?: RestrictiveResourceId;\n                                                                                                          \n  readonly name?: NonEmptyString;\n}\nexport interface SheetControlsOption {\n                                  \n  readonly visibilityState?: DashboardUIState;\n}\nexport type SheetList = Sheet[];\nexport interface SheetStyle {\n                                               \n  readonly tile?: TileStyle;\n                                              \n  readonly tileLayout?: TileLayoutStyle;\n}\nexport type SiteBaseUrl = string;\nexport interface SnowflakeParameters {\n                      \n  readonly host: Host;\n                          \n  readonly database: Database;\n                           \n  readonly warehouse: Warehouse;\n}\nexport interface SparkParameters {\n                      \n  readonly host: Host;\n                      \n  readonly port: Port;\n}\nexport type SqlQuery = string;\nexport interface SqlServerParameters {\n                      \n  readonly host: Host;\n                      \n  readonly port: Port;\n                          \n  readonly database: Database;\n}\nexport interface SslProperties {\n                                                                            \n  readonly disableSsl?: Boolean;\n}\nexport type StatusCode = number;\nexport type String = string;\nexport type StringList = String[];\nexport interface StringParameter {\n                                                       \n  readonly name: NonEmptyString;\n                                                  \n  readonly values: StringList;\n}\nexport type StringParameterList = StringParameter[];\nexport interface Tag {\n                         \n  readonly key: TagKey;\n                           \n  readonly value: TagValue;\n}\nexport interface TagColumnOperation {\n                                                        \n  readonly columnName: ColumnName;\n                                                                                                                                            \n  readonly tags: ColumnTagList;\n}\nexport type TagKey = string;\nexport type TagKeyList = TagKey[];\nexport type TagList = Tag[];\nexport interface TagResourceRequest {\n                                                                                     \n  readonly resourceArn: Arn;\n                                                                                                             \n  readonly tags: TagList;\n}\nexport interface TagResourceResponse {\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport type TagValue = string;\nexport interface Template {\n                                                                \n  readonly arn?: Arn;\n                                                  \n  readonly name?: TemplateName;\n                                                                     \n  readonly version?: TemplateVersion;\n                                                                                             \n  readonly templateId?: RestrictiveResourceId;\n                                                 \n  readonly lastUpdatedTime?: Timestamp;\n                                            \n  readonly createdTime?: Timestamp;\n}\nexport interface TemplateAlias {\n                                                        \n  readonly aliasName?: AliasName;\n                                                                      \n  readonly arn?: Arn;\n                                                          \n  readonly templateVersionNumber?: VersionNumber;\n}\nexport type TemplateAliasList = TemplateAlias[];\nexport interface TemplateError {\n                               \n  readonly type?: TemplateErrorType;\n                                               \n  readonly message?: NonEmptyString;\n}\nexport type TemplateErrorList = TemplateError[];\nexport type TemplateErrorType = 'SOURCE_NOT_FOUND' | 'DATA_SET_NOT_FOUND' | 'INTERNAL_FAILURE' | 'ACCESS_DENIED' | string;\nexport type TemplateName = string;\nexport interface TemplateSourceAnalysis {\n                                                                \n  readonly arn: Arn;\n                                                                                                                      \n  readonly dataSetReferences: DataSetReferenceList;\n}\nexport interface TemplateSourceEntity {\n                                                                    \n  readonly sourceAnalysis?: TemplateSourceAnalysis;\n                                                                    \n  readonly sourceTemplate?: TemplateSourceTemplate;\n}\nexport interface TemplateSourceTemplate {\n                                                                \n  readonly arn: Arn;\n}\nexport interface TemplateSummary {\n                                         \n  readonly arn?: Arn;\n                                                                                               \n  readonly templateId?: RestrictiveResourceId;\n                                                 \n  readonly name?: TemplateName;\n                                                                                           \n  readonly latestVersionNumber?: VersionNumber;\n                                                              \n  readonly createdTime?: Timestamp;\n                                                              \n  readonly lastUpdatedTime?: Timestamp;\n}\nexport type TemplateSummaryList = TemplateSummary[];\nexport interface TemplateVersion {\n                                                                 \n  readonly createdTime?: Timestamp;\n                                                              \n  readonly errors?: TemplateErrorList;\n                                                            \n  readonly versionNumber?: VersionNumber;\n                                                \n  readonly status?: ResourceStatus;\n                                                                                                                                                                                                             \n  readonly dataSetConfigurations?: DataSetConfigurationList;\n                                                 \n  readonly description?: VersionDescription;\n                                                                                                                 \n  readonly sourceEntityArn?: Arn;\n                                                                                   \n  readonly themeArn?: Arn;\n                                                                                                   \n  readonly sheets?: SheetList;\n}\nexport interface TemplateVersionSummary {\n                                                                        \n  readonly arn?: Arn;\n                                                            \n  readonly versionNumber?: VersionNumber;\n                                                                 \n  readonly createdTime?: Timestamp;\n                                                    \n  readonly status?: ResourceStatus;\n                                                         \n  readonly description?: VersionDescription;\n}\nexport type TemplateVersionSummaryList = TemplateVersionSummary[];\nexport interface TeradataParameters {\n                      \n  readonly host: Host;\n                      \n  readonly port: Port;\n                          \n  readonly database: Database;\n}\nexport type TextQualifier = 'DOUBLE_QUOTE' | 'SINGLE_QUOTE' | string;\nexport interface Theme {\n                                                             \n  readonly arn?: Arn;\n                                                           \n  readonly name?: ThemeName;\n                                                                 \n  readonly themeId?: RestrictiveResourceId;\n  readonly version?: ThemeVersion;\n                                                              \n  readonly createdTime?: Timestamp;\n                                                                   \n  readonly lastUpdatedTime?: Timestamp;\n                                                                                                             \n  readonly type?: ThemeType;\n}\nexport interface ThemeAlias {\n                                                                   \n  readonly arn?: Arn;\n                                                     \n  readonly aliasName?: AliasName;\n                                                       \n  readonly themeVersionNumber?: VersionNumber;\n}\nexport type ThemeAliasList = ThemeAlias[];\nexport interface ThemeConfiguration {\n                                                                  \n  readonly dataColorPalette?: DataColorPalette;\n                                                                                                              \n  readonly uIColorPalette?: UIColorPalette;\n                                                   \n  readonly sheet?: SheetStyle;\n}\nexport interface ThemeError {\n                                   \n  readonly type?: ThemeErrorType;\n                                   \n  readonly message?: NonEmptyString;\n}\nexport type ThemeErrorList = ThemeError[];\nexport type ThemeErrorType = 'INTERNAL_FAILURE' | string;\nexport type ThemeName = string;\nexport interface ThemeSummary {\n                                                                \n  readonly arn?: Arn;\n                                                \n  readonly name?: ThemeName;\n                                                                                            \n  readonly themeId?: RestrictiveResourceId;\n                                                         \n  readonly latestVersionNumber?: VersionNumber;\n                                                               \n  readonly createdTime?: Timestamp;\n                                                                    \n  readonly lastUpdatedTime?: Timestamp;\n}\nexport type ThemeSummaryList = ThemeSummary[];\nexport type ThemeType = 'QUICKSIGHT' | 'CUSTOM' | 'ALL' | string;\nexport interface ThemeVersion {\n                                                 \n  readonly versionNumber?: VersionNumber;\n                                                                \n  readonly arn?: Arn;\n                                              \n  readonly description?: VersionDescription;\n                                                                                                                                                               \n  readonly baseThemeId?: RestrictiveResourceId;\n                                                                       \n  readonly createdTime?: Timestamp;\n                                                                                          \n  readonly configuration?: ThemeConfiguration;\n                                                  \n  readonly errors?: ThemeErrorList;\n                                                 \n  readonly status?: ResourceStatus;\n}\nexport interface ThemeVersionSummary {\n                                                         \n  readonly versionNumber?: VersionNumber;\n                                                                     \n  readonly arn?: Arn;\n                                                      \n  readonly description?: VersionDescription;\n                                                                       \n  readonly createdTime?: Timestamp;\n                                                 \n  readonly status?: ResourceStatus;\n}\nexport type ThemeVersionSummaryList = ThemeVersionSummary[];\nexport interface TileLayoutStyle {\n                                                              \n  readonly gutter?: GutterStyle;\n                                                                                  \n  readonly margin?: MarginStyle;\n}\nexport interface TileStyle {\n                                          \n  readonly border?: BorderStyle;\n}\nexport type Timestamp = Date;\nexport type TimestampList = Timestamp[];\nexport interface TransformOperation {\n                                                                                                                                 \n  readonly projectOperation?: ProjectOperation;\n                                                                        \n  readonly filterOperation?: FilterOperation;\n                                                                                                                            \n  readonly createColumnsOperation?: CreateColumnsOperation;\n                                                    \n  readonly renameColumnOperation?: RenameColumnOperation;\n                                                                               \n  readonly castColumnTypeOperation?: CastColumnTypeOperation;\n                                                                             \n  readonly tagColumnOperation?: TagColumnOperation;\n}\nexport type TransformOperationList = TransformOperation[];\nexport interface TwitterParameters {\n                                      \n  readonly query: Query;\n                                                         \n  readonly maxRows: PositiveInteger;\n}\nexport type TypeCastFormat = string;\nexport interface UIColorPalette {\n                                                                                                                                                                               \n  readonly primaryForeground?: HexColor;\n                                                                                         \n  readonly primaryBackground?: HexColor;\n                                                                                                                                            \n  readonly secondaryForeground?: HexColor;\n                                                                                              \n  readonly secondaryBackground?: HexColor;\n                                                                           \n  readonly accent?: HexColor;\n                                                                                                                   \n  readonly accentForeground?: HexColor;\n                                                          \n  readonly danger?: HexColor;\n                                                                                                                  \n  readonly dangerForeground?: HexColor;\n                                                                               \n  readonly warning?: HexColor;\n                                                                                                                    \n  readonly warningForeground?: HexColor;\n                                                                                                                  \n  readonly success?: HexColor;\n                                                                                                                    \n  readonly successForeground?: HexColor;\n                                                                                                 \n  readonly dimension?: HexColor;\n                                                                                                                      \n  readonly dimensionForeground?: HexColor;\n                                                                                               \n  readonly measure?: HexColor;\n                                                                                                                    \n  readonly measureForeground?: HexColor;\n}\nexport interface UntagResourceRequest {\n                                                                                       \n  readonly resourceArn: Arn;\n                                                                                                       \n  readonly tagKeys: TagKeyList;\n}\nexport interface UntagResourceResponse {\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface UpdateAccountCustomizationRequest {\n                                                                                                  \n  readonly awsAccountId: AwsAccountId;\n                                                                                     \n  readonly namespace?: Namespace;\n                                                                                         \n  readonly accountCustomization: AccountCustomization;\n}\nexport interface UpdateAccountCustomizationResponse {\n                                                                                                   \n  readonly arn?: Arn;\n                                                                                                  \n  readonly awsAccountId?: AwsAccountId;\n                                                                                      \n  readonly namespace?: Namespace;\n                                                                                         \n  readonly accountCustomization?: AccountCustomization;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface UpdateAccountSettingsRequest {\n                                                                                                        \n  readonly awsAccountId: AwsAccountId;\n                                                                                                                                                                                                                                                                    \n  readonly defaultNamespace: Namespace;\n                                                                                                                                           \n  readonly notificationEmail?: String;\n}\nexport interface UpdateAccountSettingsResponse {\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface UpdateAnalysisPermissionsRequest {\n                                                                                                                                                                   \n  readonly awsAccountId: AwsAccountId;\n                                                                                                              \n  readonly analysisId: RestrictiveResourceId;\n                                                                                                    \n  readonly grantPermissions?: UpdateResourcePermissionList;\n                                                                                                            \n  readonly revokePermissions?: UpdateResourcePermissionList;\n}\nexport interface UpdateAnalysisPermissionsResponse {\n                                                                                 \n  readonly analysisArn?: Arn;\n                                                                         \n  readonly analysisId?: RestrictiveResourceId;\n                                                                                                             \n  readonly permissions?: ResourcePermissionList;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface UpdateAnalysisRequest {\n                                                                                           \n  readonly awsAccountId: AwsAccountId;\n                                                                                                           \n  readonly analysisId: RestrictiveResourceId;\n                                                                                                                                         \n  readonly name: AnalysisName;\n                                                                                                                                                                         \n  readonly parameters?: Parameters;\n                                                                                                                                                                                 \n  readonly sourceEntity: AnalysisSourceEntity;\n                                                                                                                                                                                              \n  readonly themeArn?: Arn;\n}\nexport interface UpdateAnalysisResponse {\n                                                              \n  readonly arn?: Arn;\n                                        \n  readonly analysisId?: RestrictiveResourceId;\n                                                                                    \n  readonly updateStatus?: ResourceStatus;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface UpdateDashboardPermissionsRequest {\n                                                                                                         \n  readonly awsAccountId: AwsAccountId;\n                                          \n  readonly dashboardId: RestrictiveResourceId;\n                                                                         \n  readonly grantPermissions?: UpdateResourcePermissionList;\n                                                                            \n  readonly revokePermissions?: UpdateResourcePermissionList;\n}\nexport interface UpdateDashboardPermissionsResponse {\n                                                                 \n  readonly dashboardArn?: Arn;\n                                          \n  readonly dashboardId?: RestrictiveResourceId;\n                                                                    \n  readonly permissions?: ResourcePermissionList;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface UpdateDashboardPublishedVersionRequest {\n                                                                                            \n  readonly awsAccountId: AwsAccountId;\n                                          \n  readonly dashboardId: RestrictiveResourceId;\n                                                     \n  readonly versionNumber: VersionNumber;\n}\nexport interface UpdateDashboardPublishedVersionResponse {\n                                          \n  readonly dashboardId?: RestrictiveResourceId;\n                                                                 \n  readonly dashboardArn?: Arn;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface UpdateDashboardRequest {\n                                                                                            \n  readonly awsAccountId: AwsAccountId;\n                                          \n  readonly dashboardId: RestrictiveResourceId;\n                                                   \n  readonly name: DashboardName;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n  readonly sourceEntity: DashboardSourceEntity;\n                                                                                                                                                                                                                         \n  readonly parameters?: Parameters;\n                                                                                    \n  readonly versionDescription?: VersionDescription;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n  readonly dashboardPublishOptions?: DashboardPublishOptions;\n                                                                                                                                                                                                                                                                                              \n  readonly themeArn?: Arn;\n}\nexport interface UpdateDashboardResponse {\n                                                                \n  readonly arn?: Arn;\n                                                                        \n  readonly versionArn?: Arn;\n                                          \n  readonly dashboardId?: RestrictiveResourceId;\n                                                    \n  readonly creationStatus?: ResourceStatus;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface UpdateDataSetPermissionsRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                                                                    \n  readonly dataSetId: ResourceId;\n                                                                                \n  readonly grantPermissions?: ResourcePermissionList;\n                                                                                   \n  readonly revokePermissions?: ResourcePermissionList;\n}\nexport interface UpdateDataSetPermissionsResponse {\n                                                               \n  readonly dataSetArn?: Arn;\n                                                                                                                                    \n  readonly dataSetId?: ResourceId;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface UpdateDataSetRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                                                       \n  readonly dataSetId: ResourceId;\n                                                  \n  readonly name: ResourceName;\n                                                                                                \n  readonly physicalTableMap: PhysicalTableMap;\n                                                                                                    \n  readonly logicalTableMap?: LogicalTableMap;\n                                                                          \n  readonly importMode: DataSetImportMode;\n                                                                                                                                           \n  readonly columnGroups?: ColumnGroupList;\n                                                                                        \n  readonly fieldFolders?: FieldFolderMap;\n                                                                                      \n  readonly rowLevelPermissionDataSet?: RowLevelPermissionDataSet;\n                                                                                   \n  readonly columnLevelPermissionRules?: ColumnLevelPermissionRuleList;\n}\nexport interface UpdateDataSetResponse {\n                                                               \n  readonly arn?: Arn;\n                                                                                                                       \n  readonly dataSetId?: ResourceId;\n                                                                                                                           \n  readonly ingestionArn?: Arn;\n                                                                                                                         \n  readonly ingestionId?: ResourceId;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface UpdateDataSourcePermissionsRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                                  \n  readonly dataSourceId: ResourceId;\n                                                                                          \n  readonly grantPermissions?: ResourcePermissionList;\n                                                                                           \n  readonly revokePermissions?: ResourcePermissionList;\n}\nexport interface UpdateDataSourcePermissionsResponse {\n                                                                   \n  readonly dataSourceArn?: Arn;\n                                                                                                  \n  readonly dataSourceId?: ResourceId;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface UpdateDataSourceRequest {\n                                    \n  readonly awsAccountId: AwsAccountId;\n                                                                                                  \n  readonly dataSourceId: ResourceId;\n                                                    \n  readonly name: ResourceName;\n                                                                                          \n  readonly dataSourceParameters?: DataSourceParameters;\n                                                                                                                                                                           \n  readonly credentials?: DataSourceCredentials;\n                                                                                                                                    \n  readonly vpcConnectionProperties?: VpcConnectionProperties;\n                                                                                                                    \n  readonly sslProperties?: SslProperties;\n}\nexport interface UpdateDataSourceResponse {\n                                                                   \n  readonly arn?: Arn;\n                                                                                                  \n  readonly dataSourceId?: ResourceId;\n                                                                    \n  readonly updateStatus?: ResourceStatus;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface UpdateGroupRequest {\n                                                               \n  readonly groupName: GroupName;\n                                                                       \n  readonly description?: GroupDescription;\n                                                                                                                                                             \n  readonly awsAccountId: AwsAccountId;\n                                                                          \n  readonly namespace: Namespace;\n}\nexport interface UpdateGroupResponse {\n                                       \n  readonly group?: Group;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface UpdateIAMPolicyAssignmentRequest {\n                                                                                   \n  readonly awsAccountId: AwsAccountId;\n                                                                                                                \n  readonly assignmentName: IAMPolicyAssignmentName;\n                                                 \n  readonly namespace: Namespace;\n                                                                                                                                                                                                                                                                                                                                                \n  readonly assignmentStatus?: AssignmentStatus;\n                                                                                                                     \n  readonly policyArn?: Arn;\n                                                                                             \n  readonly identities?: IdentityMap;\n}\nexport interface UpdateIAMPolicyAssignmentResponse {\n                                                    \n  readonly assignmentName?: IAMPolicyAssignmentName;\n                                          \n  readonly assignmentId?: String;\n                                                                                                                    \n  readonly policyArn?: Arn;\n                                                                                          \n  readonly identities?: IdentityMap;\n                                                                                                                                                                                                                                                                                                                                                \n  readonly assignmentStatus?: AssignmentStatus;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport type UpdateResourcePermissionList = ResourcePermission[];\nexport interface UpdateTemplateAliasRequest {\n                                                                                                 \n  readonly awsAccountId: AwsAccountId;\n                                         \n  readonly templateId: RestrictiveResourceId;\n                                                                                                                                                                                                                                                                                                                     \n  readonly aliasName: AliasName;\n                                                    \n  readonly templateVersionNumber: VersionNumber;\n}\nexport interface UpdateTemplateAliasResponse {\n                                    \n  readonly templateAlias?: TemplateAlias;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface UpdateTemplatePermissionsRequest {\n                                                                      \n  readonly awsAccountId: AwsAccountId;\n                                         \n  readonly templateId: RestrictiveResourceId;\n                                                                              \n  readonly grantPermissions?: UpdateResourcePermissionList;\n                                                                                \n  readonly revokePermissions?: UpdateResourcePermissionList;\n}\nexport interface UpdateTemplatePermissionsResponse {\n                                         \n  readonly templateId?: RestrictiveResourceId;\n                                                                \n  readonly templateArn?: Arn;\n                                                                          \n  readonly permissions?: ResourcePermissionList;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface UpdateTemplateRequest {\n                                                                                           \n  readonly awsAccountId: AwsAccountId;\n                                         \n  readonly templateId: RestrictiveResourceId;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \n  readonly sourceEntity: TemplateSourceEntity;\n                                                                                                                                                                                                                                                                        \n  readonly versionDescription?: VersionDescription;\n                                           \n  readonly name?: TemplateName;\n}\nexport interface UpdateTemplateResponse {\n                                         \n  readonly templateId?: RestrictiveResourceId;\n                                                                 \n  readonly arn?: Arn;\n                                                                                                  \n  readonly versionArn?: Arn;\n                                                     \n  readonly creationStatus?: ResourceStatus;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface UpdateThemeAliasRequest {\n                                                                                              \n  readonly awsAccountId: AwsAccountId;\n                                      \n  readonly themeId: RestrictiveResourceId;\n                                                                     \n  readonly aliasName: AliasName;\n                                                                                 \n  readonly themeVersionNumber: VersionNumber;\n}\nexport interface UpdateThemeAliasResponse {\n                                                   \n  readonly themeAlias?: ThemeAlias;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface UpdateThemePermissionsRequest {\n                                                                   \n  readonly awsAccountId: AwsAccountId;\n                                      \n  readonly themeId: RestrictiveResourceId;\n                                                                            \n  readonly grantPermissions?: UpdateResourcePermissionList;\n                                                                             \n  readonly revokePermissions?: UpdateResourcePermissionList;\n}\nexport interface UpdateThemePermissionsResponse {\n                                      \n  readonly themeId?: RestrictiveResourceId;\n                                                             \n  readonly themeArn?: Arn;\n                                                                          \n  readonly permissions?: ResourcePermissionList;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface UpdateThemeRequest {\n                                                                                        \n  readonly awsAccountId: AwsAccountId;\n                                      \n  readonly themeId: RestrictiveResourceId;\n                                        \n  readonly name?: ThemeName;\n                                                                                                                                                             \n  readonly baseThemeId: RestrictiveResourceId;\n                                                                                                                                                                                                                                             \n  readonly versionDescription?: VersionDescription;\n                                                                                      \n  readonly configuration?: ThemeConfiguration;\n}\nexport interface UpdateThemeResponse {\n                                      \n  readonly themeId?: RestrictiveResourceId;\n                                                              \n  readonly arn?: Arn;\n                                                                                 \n  readonly versionArn?: Arn;\n                                                  \n  readonly creationStatus?: ResourceStatus;\n                                                \n  readonly status?: StatusCode;\n                                                       \n  readonly requestId?: String;\n}\nexport interface UpdateUserRequest {\n                                                                         \n  readonly userName: UserName;\n                                                                                                                                                            \n  readonly awsAccountId: AwsAccountId;\n                                                                          \n  readonly namespace: Namespace;\n                                                                       \n  readonly email: String;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n  readonly role: UserRole;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \n  readonly customPermissionsName?: RoleName;\n                                                                                                                                                                                                                                                                                                   \n  readonly unapplyCustomPermissions?: Boolean;\n}\nexport interface UpdateUserResponse {\n                                            \n  readonly user?: User;\n                                                       \n  readonly requestId?: String;\n                                                \n  readonly status?: StatusCode;\n}\nexport interface UploadSettings {\n                             \n  readonly format?: FileFormat;\n                                                         \n  readonly startFromRow?: PositiveInteger;\n                                                                                        \n  readonly containsHeader?: Boolean;\n                                \n  readonly textQualifier?: TextQualifier;\n                                                          \n  readonly delimiter?: Delimiter;\n}\nexport interface User {\n                                                             \n  readonly arn?: Arn;\n                                      \n  readonly userName?: UserName;\n                                          \n  readonly email?: String;\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \n  readonly role?: UserRole;\n                                                                      \n  readonly identityType?: IdentityType;\n                                                                                                                                                                                                          \n  readonly active?: Boolean;\n                                              \n  readonly principalId?: String;\n                                                                          \n  readonly customPermissionsName?: RoleName;\n}\nexport type UserList = User[];\nexport type UserName = string;\nexport type UserRole = 'ADMIN' | 'AUTHOR' | 'READER' | 'RESTRICTED_AUTHOR' | 'RESTRICTED_READER' | string;\nexport type Username = string;\nexport type VersionDescription = string;\nexport type VersionNumber = number;\nexport interface VpcConnectionProperties {\n                                                                       \n  readonly vpcConnectionArn: Arn;\n}\nexport type Warehouse = string;\nexport type WorkGroup = string;\nexport type long = number;\nexport type timestamp = Date;\n/**\n * A string in YYYY-MM-DD format that represents the latest possible API version that can be used in this service. Specify 'latest' to use the latest possible version.\n */\nexport type apiVersion = '2018-04-01' | 'latest' | string;\nexport interface ClientApiVersions {\n                                                                                                                                                                                     \n  readonly apiVersion?: apiVersion;\n}\n// export type ClientConfiguration = ServiceConfigurationOptions & ClientApiVersions;\n/**\n * Contains interfaces for use with the QuickSight client.\n */\n//   export import Types = QuickSight;\n// }\n// export = QuickSight;\n"]}